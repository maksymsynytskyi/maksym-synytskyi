#include <iostream> 
#include<iomanip> 
#include <string> 
#define N 50 
 

using namespace std; 


class Olympic_Tasks { //клас олімпіадні завдання  

 

private: 

 

    string school; 
    string name; 
    int testExamples; 
    int passedTests; 

 

public: 

//стетери , гетери дані про школу 

string GetSchool() { 

return school; 

} 

void SetSchool(string school) { 

this->school = school; 

} 

 

//стетери , гетери дані учасника 

    string GetName() { 

        return name; 

    } 

void SetName(string name) { 

this->name = name; 

} 

 

//стетери , гетери  кількість тестових прикладів 

    int GetTestExamples() { 

return testExamples; 

} 

void SetTestExamples(int testExamples) { 
this->testExamples= testExamples; 

} 

 

//стетери кількість пройдених тестів 

int GetPassedTests() { 

return passedTests; 

} 

void SetPassedTests(int passedTests) { 

this->passedTests = passedTests; 

} 

 

}; 

 

class Tasks : public Olympic_Tasks { //похідний клас завдання 

 

private: 

    int maxRating; 

int max = 100; 

public: 

 

void THE_MORE_THE_BETTER(int testExamples, int passedTests) { 
this->maxRating = round((max * passedTests) / double(testExamples)); 

} 

int GetMaxRating() { 

return maxRating; 

} 

}; 

 

int input( Tasks * list) { //Введення даних 
int counter = 0; 
printf("\nВведіть інформацію про учасникiв олiмпiади : \n" 

"Для завершення ведення, замість 'Навчальний заклад' впишіть '0'\n"); 

while (1) { // цикл введення даних 

 

cout << "\n\t№" << counter + 1 << "\nНавчальний заклад :" << endl; 

string shool; 

getline(cin, shool); 

if (shool[0] == '0') { //Вихід з введеня , якщо перший символ '0' 

break; 

} 

list[counter].SetSchool(shool); 

 

cout << "Прізвище, ініціали:" << endl; 

std::string name; 

getline(cin, name); 

list[counter].SetName(name); 

 

cout << "Кількість тестових прикладів:"; 
int testExamples; 
cin >> testExamples; 
list[counter].SetTestExamples(testExamples); 
cout << "Кількість пройдених тестів:"; 
int passedTests; 
cin >> passedTests; 
list[counter].SetPassedTests(passedTests); 
rewind(stdin); 
list[counter].THE_MORE_THE_BETTER(testExamples, passedTests); 

counter++; 

} 

return counter; //Повертаю значення кількості даних 

} 

 

//сортування вставками 

void InsertionSort(Tasks* list, int number) { 

int Index, j, pos; 
int min; 
for (Index = 0; Index < number - 1; Index++) {//вибираю елемент 
pos = Index; 
min = list[Index].GetMaxRating(); 
for (j = Index + 1; j < number; j++) {//порівнюю його з усіма іншими 
if (list[j].GetMaxRating() < min) {//найменший елемент зберігаю 
pos = j; 

min = list[j].GetMaxRating(); 

} 

} 

Tasks temp; 
temp = list[pos];//та міняю місцями з вибраним 
list[pos] = list[Index]; 
list[Index] = temp; 

} 

} 

 

int Suma(Tasks* list, int number) {//Підрахунок сумарної кількісті балів, набраних учасниками олімпіади 

int sum = 0; 

for (int i = 0; i < number; i++) { 

sum += list[i].GetMaxRating(); 

} 

return sum; 

} 

 

void Print(Tasks* list, int counter) { 

int q;// видення даних у табличці 

cout << "\t\t\t\tВідсортована таблиця за зростанням набраних балів"; 

cout << "\n.------------------------------------------------------------------------------------------------------------------." 

       "\n| № |         Навчальний зклад         |   Прізвище, ініціали   | Кількість тестів | З них пройдено | Бали (x/100) |" 

   "\n:------------------------------------------------------------------------------------------------------------------:"; 

for (q = 0; q < counter; q++) { 

cout << "\n| " << q + 1 << " | " << left << setw(33) << list[q].GetSchool() << "| "; 

cout << left << setw(23) << list[q].GetName() << "|        " << left << setw(10) << list[q].GetTestExamples() ; 

cout <<"|        " << left << setw(8) << list[q].GetPassedTests() << "|      " << left << setw(8) << list[q].GetMaxRating() << "|"; 

} 

cout <<"\n'------------------------------------------------------------------------------------------------------------------'\n"<<endl; 
cout <<"Cумарна кількість балів, набраних учасниками олімпіади = "<< Suma(list, counter) <<"/" <<100* counter<<endl; 

} 

 

int main() 

{ 

system("chcp 1251"); 
Tasks list[N]; 
int num = input(list); 
InsertionSort(list,num); 
Print(list,num); 

} 
